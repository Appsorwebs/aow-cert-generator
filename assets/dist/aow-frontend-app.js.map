{
  "version": 3,
  "sources": ["../js/aow-frontend-app.js"],
  "sourcesContent": ["    const state = {\n        currentView: 'generator',\n    isAdminLoggedIn: false,\n    // persisted certificates for preview\n    certificates: {},\n        baseVerificationUrl: window.location.href.split('?')[0] + '?view=verifier&id='\n    };\n\n    // restore certificates from localStorage (preview only)\n    try {\n        const saved = localStorage.getItem('aow_preview_certificates');\n        if (saved) state.certificates = JSON.parse(saved);\n    } catch (err) { console.warn('aow preview: failed to restore certificates', err); }\n    const contentArea = document.getElementById('content-area');\n    const msgBox = document.getElementById('message-box');\n    const navGenerator = document.getElementById('nav-generator');\n    const navVerifier = document.getElementById('nav-verifier');\n\n    function showMessage(message, type = 'info') { let bgColor = 'bg-aow-primary'; if (type === 'success') bgColor = 'bg-green-500'; if (type === 'error') bgColor = 'bg-red-600'; msgBox.className = `fixed top-0 right-0 m-6 p-4 rounded-lg shadow-2xl text-white transition-opacity duration-300 z-50 pointer-events-none ${bgColor}`; msgBox.textContent = message; msgBox.style.opacity = 1; setTimeout(() => { msgBox.style.opacity = 0; }, 3000); }\n    function generateUniqueId() { return 'AOWL-' + Math.random().toString(36).substring(2, 8).toUpperCase() + '-' + Date.now().toString().slice(-4); }\n    function updateNav(view) { const inactiveClasses = 'text-aow-primary border border-aow-primary hover:bg-aow-card-bg/70'; const activeClasses = 'bg-aow-primary text-aow-dark-bg shadow-lg hover:shadow-aow-glow'; navGenerator.className = 'px-5 py-2 text-sm font-semibold rounded-full transition duration-300 ml-3'; navVerifier.className = 'px-5 py-2 text-sm font-semibold rounded-full transition duration-300 ml-3'; if (view === 'generator' && state.isAdminLoggedIn) { navGenerator.classList.add(...activeClasses.split(' ')); navVerifier.classList.add(...inactiveClasses.split(' ')); } else { navVerifier.classList.add(...activeClasses.split(' ')); navGenerator.classList.add(...inactiveClasses.split(' ')); } }\n\n    function renderLoginView() {\n        state.isAdminLoggedIn = false; updateNav('verifier');\n        contentArea.innerHTML = `\n            <div class=\"p-8 md:p-12 rounded-3xl shadow-strong illuminated-card max-w-md mx-auto\">\n                <h2 class=\"text-3xl font-bold text-center text-aow-primary mb-6\">Admin Access: Generator Login</h2>\n                <p class=\"text-center text-gray-400 mb-8\">Access is restricted to authorized AppsOrWebs Limited personnel.</p>\n                <form id=\"admin-login-form\">\n                    <label for=\"admin-pass\" class=\"block text-sm font-medium text-gray-300 mb-2\">Secure Password</label>\n                    <input type=\"password\" id=\"admin-pass\" required class=\"w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-aow-primary transition duration-300\" placeholder=\"Enter Admin Password\">\n                    <button type=\"submit\" class=\"w-full mt-6 py-3 bg-aow-secondary text-aow-dark-bg font-bold rounded-lg hover:bg-aow-primary hover:text-white transition duration-300 shadow-md hover:shadow-secondary-glow\">\n                        Authenticate & Login\n                    </button>\n                </form>\n            </div>\n        `;\n        document.getElementById('admin-login-form').addEventListener('submit', handleLogin);\n    }\n\n    function renderAdminView() {\n        updateNav('generator');\n        contentArea.innerHTML = `\n            <div class=\"p-6 md:p-10 rounded-3xl shadow-strong illuminated-card\">\n                <h2 class=\"text-3xl font-bold text-aow-primary mb-8 border-b border-aow-secondary/50 pb-4\">Certificate Generation Portal</h2>\n                \n                <form id=\"certificate-form\" class=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n                    \n                    <div class=\"lg:col-span-3\">\n                        <h3 class=\"text-2xl font-bold mb-4 text-aow-secondary border-b border-aow-card-bg/50 pb-2\">Student & Course Details</h3>\n                    </div>\n                    \n                    <div class=\"col-span-1\">\n                        <label for=\"student-name\" class=\"block text-sm font-medium text-gray-300 mb-1\">Student Name (Full)</label>\n                        <input type=\"text\" id=\"student-name\" required class=\"w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-aow-primary\" placeholder=\"e.g., Jane E. Doe\">\n                    </div>\n                    \n                    <div class=\"col-span-1\">\n                        <label for=\"course-title\" class=\"block text-sm font-medium text-gray-300 mb-1\">Course Title</label>\n                        <input type=\"text\" id=\"course-title\" required class=\"w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-aow-primary\" placeholder=\"e.g., Advanced Full-Stack Development\">\n                    </div>\n                    \n                    <div class=\"col-span-1\">\n                        <label for=\"completion-date\" class=\"block text-sm font-medium text-gray-300 mb-1\">Completion Date</label>\n                        <input type=\"date\" id=\"completion-date\" value=\"${new Date().toISOString().split('T')[0]}\" required class=\"w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-aow-primary bg-aow-input-bg text-gray-200\">\n                    </div>\n                    \n                    <div class=\"lg:col-span-3 mt-4\">\n                        <h3 class=\"text-2xl font-bold mb-4 text-aow-secondary border-b border-aow-card-bg/50 pb-2\">Branding & Authorization</h3>\n                    </div>\n\n                    <div class=\"col-span-1\">\n                        <label for=\"instructor-name\" class=\"block text-sm font-medium text-gray-300 mb-1\">Instructor/Signatory Name <span class=\"text-xs text-gray-400\">(optional)</span></label>\n                        <input type=\"text\" id=\"instructor-name\" value=\"Michael Anderson, CEO AppsOrWebs Limited\" class=\"w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-aow-primary\">\n                    </div>\n\n                    <div class=\"col-span-1\">\n                        <label for=\"logo-url\" class=\"block text-sm font-medium text-gray-300 mb-1\">AppsOrWebs Logo URL</label>\n                        <div class=\"flex space-x-2\">\n                            <input type=\"url\" id=\"logo-url\" value=\"\" required class=\"w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-aow-primary\" placeholder=\"URL for logo image\">\n                            <button type=\"button\" id=\"upload-logo-btn\" class=\"px-3 py-2 bg-aow-primary text-aow-dark-bg rounded-md\">Upload</button>\n                        </div>\n                        <input type=\"file\" id=\"logo-file-input\" accept=\"image/*\" style=\"display:none\">\n                        <p class=\"text-xs text-gray-400 mt-1\">You can upload or paste a logo URL. Upload uses client-side file conversion in the preview.</p>\n                    </div>\n\n                    <div class=\"col-span-1\">\n                        <label for=\"signature-url\" class=\"block text-sm font-medium text-gray-300 mb-1\">Signature Image URL</label>\n                        <div class=\"flex space-x-2\">\n                            <input type=\"url\" id=\"signature-url\" value=\"\" class=\"w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-aow-primary\" placeholder=\"URL for signature image (optional)\">\n                            <button type=\"button\" id=\"upload-signature-btn\" class=\"px-3 py-2 bg-aow-primary text-aow-dark-bg rounded-md\">Upload</button>\n                        </div>\n                        <input type=\"file\" id=\"signature-file-input\" accept=\"image/*\" style=\"display:none\">\n                        <p class=\"text-xs text-gray-400 mt-1\">Upload a signature image or provide its URL.</p>\n                    </div>\n\n                    <div class=\"col-span-1 lg:col-span-3 mt-6\">\n                        <button type=\"submit\" class=\"w-full py-4 bg-green-600 text-white font-bold text-xl rounded-xl hover:bg-green-500 transition duration-300 shadow-lg hover:shadow-green-500/50 transform hover:scale-[1.01]\">\n                            GENERATE UNIQUE CERTIFICATE & SAVE\n                        </button>\n                    </div>\n                </form>\n\n                <div class=\"mt-10 pt-6 border-t border-aow-primary/50\">\n                    <h3 class=\"text-2xl font-bold text-aow-primary mb-4\">Generated Certificates List (${Object.keys(state.certificates).length})</h3>\n                    <div id=\"certificate-list\" class=\"space-y-4\">\n                        ${Object.keys(state.certificates).length === 0 \n                            ? '<p class=\"text-gray-500 italic\">No certificates generated yet. Start by filling the form above.</p>' \n                            : ''}\n                    </div>\n                </div>\n            </div>\n        `;\n        document.getElementById('certificate-form').addEventListener('submit', generateCertificate);\n        renderCertificateList();\n        // Preview: handle logo upload button (client-side data URL)\n        const uploadBtn = document.getElementById('upload-logo-btn');\n        const fileInput = document.getElementById('logo-file-input');\n        if (uploadBtn) uploadBtn.addEventListener('click', () => fileInput.click());\n        if (fileInput) fileInput.addEventListener('change', (e) => {\n            const f = e.target.files[0]; if (!f) return;\n            const reader = new FileReader(); reader.onload = (ev) => { document.getElementById('logo-url').value = ev.target.result; }; reader.readAsDataURL(f);\n        });\n        const sigUploadBtn = document.getElementById('upload-signature-btn');\n        const sigInput = document.getElementById('signature-file-input');\n        if (sigUploadBtn && sigInput) sigUploadBtn.addEventListener('click', () => sigInput.click());\n        if (sigInput) sigInput.addEventListener('change', (e) => { const f = e.target.files[0]; if (!f) return; const reader = new FileReader(); reader.onload = ev => document.getElementById('signature-url').value = ev.target.result; reader.readAsDataURL(f); });\n    }\n\n    function renderCertificateList() {\n        const listContainer = document.getElementById('certificate-list');\n        if (!listContainer) return;\n        if (Object.keys(state.certificates).length === 0) { listContainer.innerHTML = '<p class=\"text-gray-500 italic\">No certificates generated yet. Start by filling the form above.</p>'; return; }\n        listContainer.innerHTML = Object.values(state.certificates).map(cert => `\n            <div class=\"flex flex-col sm:flex-row justify-between items-center p-4 bg-aow-input-bg rounded-lg border border-aow-card-bg/50 hover:border-aow-secondary transition duration-300 cursor-default shadow-lg\">\n                <div>\n                    <p class=\"font-semibold text-xl text-gray-100\">${cert.studentName}</p>\n                    <p class=\"text-sm text-gray-400\">${cert.courseTitle} | ID: <span class=\"text-aow-secondary font-mono text-sm\">${cert.certificateId}</span></p>\n                </div>\n                <div class=\"mt-3 sm:mt-0 flex space-x-2\">\n                    <button onclick=\"showCertificate('${cert.certificateId}')\" class=\"px-3 py-1 text-sm bg-aow-secondary text-aow-dark-bg font-semibold rounded-full hover:bg-aow-primary hover:text-white transition shadow-md\">View Certificate</button>\n                    <button onclick=\"deleteCertificate('${cert.certificateId}')\" class=\"px-3 py-1 text-sm bg-red-700 text-red-100 rounded-full hover:bg-red-600 transition\">Delete</button>\n                </div>\n            </div>\n        `).join('');\n    }\n\n    function renderVerificationView(id = null) {\n        updateNav('verifier');\n        contentArea.innerHTML = `\n            <div class=\"p-8 md:p-12 rounded-3xl shadow-strong illuminated-card max-w-lg mx-auto\">\n                <h2 class=\"text-3xl font-bold text-center text-aow-primary mb-4\">Certificate Verification Portal</h2>\n                <p class=\"text-center text-gray-400 mb-8\">Enter the unique Certificate ID or scan the QR code to verify validity.</p>\n                \n                <form id=\"verification-form\" class=\"flex flex-col sm:flex-row gap-3\">\n                    <input type=\"text\" id=\"verify-id\" value=\"${id || ''}\" required class=\"flex-grow px-4 py-3 border rounded-lg focus:ring-2 focus:ring-aow-primary\" placeholder=\"Enter Certificate ID (e.g., AOWL-XXXXXX-XXXX)\">\n                    <button type=\"submit\" class=\"shrink-0 px-6 py-3 bg-aow-primary text-aow-dark-bg font-bold rounded-lg hover:bg-aow-secondary transition duration-300 shadow-md hover:shadow-aow-glow\">\n                        Verify Certificate\n                    </button>\n                </form>\n                \n                <div id=\"verification-result\" class=\"mt-8 pt-6 border-t border-aow-primary/50 min-h-24\">\n                    <p class=\"text-center text-gray-500\">Enter a Certificate ID and click 'Verify' to check status.</p>\n                </div>\n            </div>\n        `;\n\n        document.getElementById('verification-form').addEventListener('submit', verifyCertificate);\n        if (id) { verifyCertificate({ preventDefault: () => {} }); }\n    }\n\n    function showCertificate(id) {\n        const cert = state.certificates[id];\n        if (!cert) return showMessage('Certificate not found!', 'error');\n        const certContainer = document.createElement('div');\n        certContainer.id = 'certificate-modal';\n        certContainer.className = 'fixed inset-0 bg-aow-dark-bg bg-opacity-95 flex items-center justify-center p-4 z-50';\n        certContainer.innerHTML = `\n            <div class=\"relative bg-aow-cert-bg text-gray-200 p-8 rounded-xl max-w-4xl w-full h-auto overflow-y-auto certificate-container\">\n                <button onclick=\"document.getElementById('certificate-modal').remove()\" class=\"absolute top-4 right-4 p-2 text-gray-400 hover:text-aow-secondary transition rounded-full hover:bg-aow-card-bg/50\">\n                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg>\n                </button>\n\n                <div class=\"p-8 md:p-16 text-center\">\n                    <img src=\"${cert.logoUrl}\" alt=\"AppsOrWebs Logo\" class=\"mx-auto mb-8 h-12\">\n                    \n                    <h3 class=\"text-xl font-medium text-gray-400 uppercase mb-2\">Certificate of Completion</h3>\n                    <h2 class=\"text-5xl font-extrabold text-aow-primary mb-6\">AppsOrWebs Limited</h2>\n\n                    <p class=\"text-2xl font-light italic mb-8\">This certifies that</p>\n                    \n                    <p class=\"text-6xl font-serif font-bold text-gray-50 border-b-4 border-aow-secondary inline-block px-10 pb-2 mb-12\">${cert.studentName}</p>\n                    \n                    <p class=\"text-2xl font-light italic mb-2\">has successfully completed the demanding curriculum for the course:</p>\n                    <p class=\"text-4xl font-bold text-gray-50 mb-10\">${cert.courseTitle}</p>\n                    \n                    <div class=\"flex flex-col md:flex-row justify-center items-center mt-12 space-y-8 md:space-y-0 md:space-x-16\">\n                        \n                        <div class=\"flex-1 text-center max-w-xs\">\n                            <img src=\"${cert.signatureUrl}\" alt=\"Signature\" class=\"h-10 mx-auto mb-2 filter-none\" style=\"opacity: 0.8;\">\n                            <div class=\"border-t border-gray-600 pt-1\">\n                                <p class=\"text-lg font-semibold text-gray-100\">${cert.instructorName}</p>\n                                <p class=\"text-sm text-gray-400\">Authorized Instructor (optional)</p>\n                            </div>\n                        </div>\n                        \n                        <div class=\"text-center max-w-xs\">\n                            <p class=\"text-2xl font-bold text-gray-50\">${cert.completionDate}</p>\n                            <div class=\"border-t border-gray-600 pt-1\">\n                                <p class=\"text-sm text-gray-400\">Date of Completion</p>\n                            </div>\n                        </div>\n\n                        <div class=\"flex-1 text-center max-w-xs\">\n                            <div id=\"qrcode-${id}\" class=\"mx-auto mb-2 p-2 border-2 border-aow-primary inline-block\"></div>\n                            <p class=\"text-xs font-mono break-words text-gray-200\">${cert.certificateId}</p>\n                            <p class=\"text-sm text-gray-400 mt-1\">Scan or use ID for verification</p>\n                        </div>\n                    </div>\n\n                </div>\n                <p class=\"text-center text-xs text-gray-500 mt-8\">VERIFIED LINK: ${state.baseVerificationUrl + id}</p>\n\n            </div>\n        `;\n        document.body.appendChild(certContainer);\n        new QRCode(document.getElementById(`qrcode-${id}`), { text: state.baseVerificationUrl + id, width: 80, height: 80, colorDark : \"#FFFFFF\", colorLight : \"#2F3C50\", correctLevel : QRCode.CorrectLevel.H });\n\n        // Add download controls\n        const modal = document.getElementById('certificate-modal');\n        const controls = document.createElement('div');\n        controls.className = 'mt-6 flex justify-center space-x-3';\n        controls.innerHTML = `\n            <button id=\"download-json\" class=\"px-3 py-2 bg-gray-700 rounded text-sm\">Download JSON</button>\n            <button id=\"download-svg\" class=\"px-3 py-2 bg-gray-700 rounded text-sm\">Download SVG</button>\n            <button id=\"download-png\" class=\"px-3 py-2 bg-gray-700 rounded text-sm\">Download PNG</button>\n            <button id=\"download-pdf\" class=\"px-3 py-2 bg-green-600 rounded text-sm\">Download PDF</button>\n        `;\n        modal.querySelector('.p-8').appendChild(controls);\n\n        document.getElementById('download-json').addEventListener('click', () => {\n            const blob = new Blob([JSON.stringify(cert, null, 2)], { type: 'application/json' });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a'); a.href = url; a.download = `${cert.certificateId}.json`; a.click(); URL.revokeObjectURL(url);\n        });\n\n        document.getElementById('download-svg').addEventListener('click', () => {\n            // Create a simple SVG snapshot (approximate)\n            const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1200\" height=\"800\"><foreignObject width=\"100%\" height=\"100%\">` +\n                `<div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"font-family:Inter,sans-serif;background:${getComputedStyle(document.querySelector('.certificate-container')).backgroundColor};color:#fff;padding:40px;\">` +\n                `<h1 style=\"font-size:36px;color:${getComputedStyle(document.querySelector('.aow-header-glow')).color || '#00C2B2'}\">Certificate</h1>` +\n                `<h2 style=\"font-size:48px\">${cert.studentName}</h2>` +\n                `<p style=\"font-size:24px\">${cert.courseTitle}</p>` +\n                `</div></foreignObject></svg>`;\n            const blob = new Blob([svg], { type: 'image/svg+xml' });\n            const url = URL.createObjectURL(blob); const a = document.createElement('a'); a.href = url; a.download = `${cert.certificateId}.svg`; a.click(); URL.revokeObjectURL(url);\n        });\n\n        document.getElementById('download-png').addEventListener('click', async () => {\n            const node = modal.querySelector('.certificate-container');\n            try {\n                const canvas = await html2canvas(node, { backgroundColor: null, scale: 2 });\n                const pngUrl = canvas.toDataURL('image/png');\n                const a = document.createElement('a'); a.href = pngUrl; a.download = `${cert.certificateId}.png`; a.click();\n            } catch (err) {\n                console.error('html2canvas failed', err);\n                showMessage('PNG export failed in preview. See console for details.', 'error');\n            }\n        });\n\n        document.getElementById('download-pdf').addEventListener('click', () => {\n            // Use browser print to PDF as a fallback\n            const printWin = window.open('', '_blank');\n            printWin.document.write(modal.innerHTML);\n            printWin.document.close();\n            printWin.focus();\n            printWin.print();\n        });\n    }\n\n    function handleLogin(e) { e.preventDefault(); // Preview accepts any password to demonstrate admin UI\n        state.isAdminLoggedIn = true; showMessage('Preview login successful.', 'success'); renderAdminView(); }\n    function generateCertificate(e) {\n        e.preventDefault();\n        const studentName = document.getElementById('student-name').value;\n        const courseTitle = document.getElementById('course-title').value;\n        const completionDate = document.getElementById('completion-date').value;\n        const instructorName = document.getElementById('instructor-name').value;\n        const logoUrl = document.getElementById('logo-url').value;\n        const signatureUrl = document.getElementById('signature-url').value;\n        const newId = generateUniqueId();\n        const newCertificate = { certificateId: newId, studentName, courseTitle, completionDate, instructorName, logoUrl, signatureUrl, verificationUrl: state.baseVerificationUrl + newId };\n        state.certificates[newId] = newCertificate;\n        try { localStorage.setItem('aow_preview_certificates', JSON.stringify(state.certificates)); } catch (err) { console.warn('persist failed', err); }\n        showMessage(`Certificate for ${studentName} generated successfully! ID: ${newId}`, 'success');\n        renderAdminView();\n        showCertificate(newId);\n    }\n\n    function deleteCertificate(id) {\n        showMessage(`Certificate ${id} deleted (preview).`, 'info');\n        delete state.certificates[id];\n        try { localStorage.setItem('aow_preview_certificates', JSON.stringify(state.certificates)); } catch (err) { console.warn('persist failed', err); }\n        renderAdminView();\n    }\n    function verifyCertificate(e) { e.preventDefault(); const resultArea = document.getElementById('verification-result'); const inputId = document.getElementById('verify-id').value.trim().toUpperCase(); const certificate = state.certificates[inputId]; if (certificate) { resultArea.innerHTML = `\n                <div class=\"p-6 rounded-xl border-4 border-aow-primary bg-aow-card-bg shadow-inner-glow\">\n                    <div class=\"flex items-center mb-4\">\n                        <svg class=\"w-8 h-8 text-aow-primary mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                        <h3 class=\"text-2xl font-bold text-aow-primary\">CERTIFICATE VERIFIED & VALID</h3>\n                    </div>\n                    <p class=\"mb-2\"><span class=\"font-bold text-aow-secondary\">Student Name:</span> ${certificate.studentName}</p>\n                    <p class=\"mb-2\"><span class=\"font-bold text-aow-secondary\">Course Completed:</span> ${certificate.courseTitle}</p>\n                    <p class=\"mb-2\"><span class=\"font-bold text-aow-secondary\">Completion Date:</span> ${certificate.completionDate}</p>\n                    <p class=\"mb-0\"><span class=\"font-bold text-aow-secondary\">Certificate ID:</span> <span class=\"font-mono\">${certificate.certificateId}</span></p>\n                </div>\n            `; } else { resultArea.innerHTML = `\n                <div class=\"p-6 rounded-xl border-4 border-red-500 bg-aow-card-bg shadow-md\">\n                    <div class=\"flex items-center mb-4\">\n                        <svg class=\"w-8 h-8 text-red-400 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                        <h3 class=\"text-2xl font-bold text-red-400\">VERIFICATION FAILED</h3>\n                    </div>\n                    <p>The Certificate ID '<span class=\"font-mono font-bold\">${inputId || 'EMPTY'}</span>' was not found in our records. Please ensure the ID is correct or contact AppsOrWebs Limited support.</p>\n                </div>\n            `; }\n    }\n\n    function initializeApp() { const urlParams = new URLSearchParams(window.location.search); const view = urlParams.get('view'); const id = urlParams.get('id'); navGenerator.addEventListener('click', () => { if (state.isAdminLoggedIn) { renderAdminView(); } else { renderLoginView(); } }); navVerifier.addEventListener('click', () => renderVerificationView()); if (view === 'verifier') { state.currentView = 'verifier'; renderVerificationView(id); } else { state.currentView = 'generator'; renderLoginView(); } }\n    function confirm(message) { return true; }\n    window.onload = initializeApp;\n\n"],
  "mappings": "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",
  "names": ["state", "saved", "err", "contentArea", "msgBox", "navGenerator", "navVerifier", "showMessage", "message", "type", "bgColor", "generateUniqueId", "updateNav", "view", "inactiveClasses", "activeClasses", "renderLoginView", "handleLogin", "renderAdminView", "generateCertificate", "renderCertificateList", "uploadBtn", "fileInput", "e", "f", "reader", "ev", "sigUploadBtn", "sigInput", "listContainer", "cert", "renderVerificationView", "id", "verifyCertificate", "showCertificate", "certContainer", "modal", "controls", "blob", "url", "svg", "a", "node", "pngUrl", "printWin", "studentName", "courseTitle", "completionDate", "instructorName", "logoUrl", "signatureUrl", "newId", "newCertificate", "verifyCertificate", "e", "resultArea", "inputId", "certificate", "state", "initializeApp", "urlParams", "view", "id", "navGenerator", "renderAdminView", "renderLoginView", "navVerifier", "renderVerificationView", "initializeApp"]
}
